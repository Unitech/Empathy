
// // not the browser, worst env check ever

var colors = require('colors');
var spawn = require('child_process').spawn;
var exec = require('child_process').exec, child;

var controller = new (require('events').EventEmitter);

controller.sound = function(dt, callback) {
    var command = ['-a', 'hw:0,0', dt.file];
    var child = spawn('mpg321', command);
    var self = this;
    
    this.child = child;
    this.volume = (dt.volume ? '80' : dt.volume);
    
    this.passed = 0;

    child.stderr.on('data', function() {
	if (self.passed == 0) {
	    self.setVolume((dt.volume ? '80' : dt.volume));
	    callback(null);
	}
	self.passed++;
    });

    child.on('exit', function(code) {
	console.log('end');
    });    

    //
    // Kick process if brutally exited
    //
    process.on('exit', function () {
	self.stop();
    });
}

controller.stop = function() {
    this.child.kill('SIGHUP');
}

controller.volumeLess = function() {
    var self = this;

    self.volume -= 10;

    var cmd = 'amixer -c 0 sset PCM ' + self.volume + '%';
    console.log(cmd);
    exec(cmd, function(error, stdout, stderr) {
	console.log(stdout);
    });
}

controller.volumeMore = function() {
    var self = this;

    self.volume += 10;
    var cmd = 'amixer -c 0 sset PCM ' + self.volume + '%';

    console.log(self.volume.red);
    exec(cmd, function(error, stdout, stderr) {
	//console.log(stdout);
    });
}

controller.setVolume = function(val) {
    var cmd = 'amixer -c 0 sset PCM ' + val + '%';
    
    this.volume = val;
    console.log(this.volume);
    exec(cmd, function(error, stdout, stderr) {});
}

controller.increaseSlowly = function(cb) {
    var self = this;

    if (self.volume != 65)
	self.volume = 66;


    this.increaser = setInterval(function() {	
	self.setVolume(self.volume);
	
	self.volume += 1;
	if (self.volume >= 100) {
	    clearInterval(self.increaser);
	    cb(null);
	}
    }, 1500);

}

module.exports = controller;
